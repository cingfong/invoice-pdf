# This is a basic workflow to help you get started with Actions

env:
  NODE_VERSION: "22.14.0"
  PNPM_VERSION: "10.8.1"

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        # 宣告 GITHUB_ENV 儲存 pnpm store 的路徑
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          # {{ runner.os }} 是 GitHub Actions 的環境變量，表示運行器（runner）的作業系統類型
          # pnpm store 是 pnpm 的快取目錄，儲存在 GITHUB_ENV 環境變量中
          # hashFiles('**/pnpm-lock.yaml') 是 GitHub Actions 的函數，用於生成 pnpm-lock.yaml 文件的哈希值
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install dependencies
        # 使用 pnpm 安裝依賴，並使用 --frozen-lockfile 選項
        # 這樣可以確保在不同的機器上安裝的依賴版本一致
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint
